Archive member included because of file (symbol)

c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./adc.o (__do_clear_bss)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./lcd44780.o (itoa)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
                              ./lcd44780.o (ltoa)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
                              ./lcd44780.o (__eerd_byte_m32)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

dc_0                0x1               ./main.o
dc_14               0x1               ./main.o
UART_TxHead         0x1               ./mkuart.o
dc_16               0x1               ./main.o
STATE               0x1               ./adc.o
UART_TxTail         0x1               ./mkuart.o
theTenBitResults    0x2               ./adc.o
halfsec_count       0x1               ./adc.o
OCRxn_val           0x2               ./adc.o
UART_TxBuf          0x10              ./mkuart.o
UART_RxHead         0x1               ./mkuart.o
UART_RxTail         0x1               ./mkuart.o
UART_RxBuf          0x20              ./mkuart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./adc.o
LOAD ./lcd44780.o
LOAD ./main.o
LOAD ./mkuart.o
LOAD ./pwm.o
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7ac
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_8
                0x00000078                __vector_10
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./adc.o
 .text          0x0000007c        0x0 ./lcd44780.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 ./mkuart.o
 .text          0x0000007c        0x0 ./pwm.o
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.initADC  0x0000007c        0xc ./adc.o
                0x0000007c                initADC
 .text.__vector_16
                0x00000088       0x48 ./adc.o
                0x00000088                __vector_16
 .text.lcd_sendHalf
                0x000000d0       0x2a ./lcd44780.o
 .text._lcd_write_byte
                0x000000fa       0x2e ./lcd44780.o
                0x000000fa                _lcd_write_byte
 .text.lcd_write_cmd
                0x00000128        0x8 ./lcd44780.o
                0x00000128                lcd_write_cmd
 .text.lcd_write_data
                0x00000130        0x8 ./lcd44780.o
                0x00000130                lcd_write_data
 .text.lcd_char
                0x00000138       0x12 ./lcd44780.o
                0x00000138                lcd_char
 .text.lcd_str  0x0000014a       0x18 ./lcd44780.o
                0x0000014a                lcd_str
 .text.lcd_str_P
                0x00000162       0x1c ./lcd44780.o
                0x00000162                lcd_str_P
 .text.lcd_defchar
                0x0000017e       0x30 ./lcd44780.o
                0x0000017e                lcd_defchar
 .text.lcd_defchar_P
                0x000001ae       0x40 ./lcd44780.o
                0x000001ae                lcd_defchar_P
 .text.lcd_locate
                0x000001ee       0x10 ./lcd44780.o
                0x000001ee                lcd_locate
 .text.lcd_cls  0x000001fe       0x10 ./lcd44780.o
                0x000001fe                lcd_cls
 .text.lcd_init
                0x0000020e       0x88 ./lcd44780.o
                0x0000020e                lcd_init
 .text.lcd_defchar_E
                0x00000296       0x40 ./lcd44780.o
                0x00000296                lcd_defchar_E
 .text.lcd_str_E
                0x000002d6       0x24 ./lcd44780.o
                0x000002d6                lcd_str_E
 .text.lcd_hex  0x000002fa       0x38 ./lcd44780.o
                0x000002fa                lcd_hex
 .text.lcd_int  0x00000332       0x38 ./lcd44780.o
                0x00000332                lcd_int
 .text.set_systik
                0x0000036a        0xe ./main.o
                0x0000036a                set_systik
 .text.initInterrupt1
                0x00000378       0x26 ./main.o
                0x00000378                initInterrupt1
 .text.main     0x0000039e       0x36 ./main.o
                0x0000039e                main
 .text.__vector_7
                0x000003d4      0x104 ./main.o
                0x000003d4                __vector_7
 .text.USART_Init
                0x000004d8       0x18 ./mkuart.o
                0x000004d8                USART_Init
 .text.__vector_15
                0x000004f0       0x16 ./mkuart.o
                0x000004f0                __vector_15
 .text.uart_putc
                0x00000506       0x24 ./mkuart.o
                0x00000506                uart_putc
 .text.uart_puts
                0x0000052a       0x18 ./mkuart.o
                0x0000052a                uart_puts
 .text.__vector_14
                0x00000542       0x4e ./mkuart.o
                0x00000542                __vector_14
 .text.uart_getc
                0x00000590       0x2a ./mkuart.o
                0x00000590                uart_getc
 .text.__vector_13
                0x000005ba       0x42 ./mkuart.o
                0x000005ba                __vector_13
 .text.uart_putint
                0x000005fc       0x42 ./mkuart.o
                0x000005fc                uart_putint
 .text.initInterrupt0
                0x0000063e       0x10 ./pwm.o
                0x0000063e                initInterrupt0
 .text.calibrate_dutycycle
                0x0000064e       0x14 ./pwm.o
                0x0000064e                calibrate_dutycycle
 .text.libgcc   0x00000662        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000662        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000662       0x42 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00000662                itoa
 .text.avr-libc
                0x000006a4       0x68 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
                0x000006a4                ltoa
 .text.avr-libc
                0x0000070c       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
                0x0000070c                __eerd_byte_m32
 .text.avr-libc
                0x0000071c       0x20 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x0000071c                strrev
 .text.libgcc   0x0000073c       0x28 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x0000073c                __udivmodhi4
 .text.libgcc   0x00000764       0x44 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x00000764                __udivmodsi4
                0x000007a8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007a8        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000007a8                exit
                0x000007a8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007a8        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007ac                _etext = .

.data           0x00800060        0x0 load address 0x000007ac
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./adc.o
 .data          0x00800060        0x0 ./lcd44780.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 ./mkuart.o
 .data          0x00800060        0x0 ./pwm.o
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x3d
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./adc.o
 .bss           0x00800060        0x0 ./lcd44780.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 ./mkuart.o
 .bss           0x00800060        0x0 ./pwm.o
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060        0x6 ./adc.o
                0x00800060                STATE
                0x00800061                theTenBitResults
                0x00800063                halfsec_count
                0x00800064                OCRxn_val
 COMMON         0x00800066        0x3 ./main.o
                0x00800066                dc_0
                0x00800067                dc_14
                0x00800068                dc_16
 COMMON         0x00800069       0x34 ./mkuart.o
                0x00800069                UART_TxHead
                0x0080006a                UART_TxTail
                0x0080006b                UART_TxBuf
                0x0080007b                UART_RxHead
                0x0080007c                UART_RxTail
                0x0080007d                UART_RxBuf
                0x0080009d                PROVIDE (__bss_end, .)
                0x000007ac                __data_load_start = LOADADDR (.data)
                0x000007ac                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080009d        0x0
                0x0080009d                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080009d                PROVIDE (__noinit_end, .)
                0x0080009d                _end = .
                0x0080009d                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(fastpwm.elf elf32-avr)
LOAD linker stubs
