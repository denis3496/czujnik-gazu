Archive member included because of file (symbol)

c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./MKUART/mkuart.o (__do_clear_bss)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./MKUART/mkuart.o (itoa)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
                              ./lcd44780.o (ltoa)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
                              ./lcd44780.o (__eerd_byte_m32)
c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)
c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                              c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

dc_0                0x1               ./main.o
dc_14               0x1               ./main.o
UART_TxHead         0x1               ./MKUART/mkuart.o
dc_16               0x1               ./main.o
STATE               0x1               ./main.o
UART_TxTail         0x1               ./MKUART/mkuart.o
halfsec_count       0x1               ./main.o
OCRxn_val           0x2               ./main.o
UART_TxBuf          0x10              ./MKUART/mkuart.o
UART_RxHead         0x1               ./MKUART/mkuart.o
UART_RxTail         0x1               ./MKUART/mkuart.o
UART_RxBuf          0x20              ./MKUART/mkuart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MKUART/mkuart.o
LOAD ./lcd44780.o
LOAD ./main.o
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x7d6
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_8
                0x00000078                __vector_10
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./MKUART/mkuart.o
 .text          0x0000007c        0x0 ./lcd44780.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x0000007c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.USART_Init
                0x0000007c       0x18 ./MKUART/mkuart.o
                0x0000007c                USART_Init
 .text.__vector_15
                0x00000094       0x16 ./MKUART/mkuart.o
                0x00000094                __vector_15
 .text.uart_putc
                0x000000aa       0x24 ./MKUART/mkuart.o
                0x000000aa                uart_putc
 .text.uart_puts
                0x000000ce       0x18 ./MKUART/mkuart.o
                0x000000ce                uart_puts
 .text.__vector_14
                0x000000e6       0x4e ./MKUART/mkuart.o
                0x000000e6                __vector_14
 .text.uart_getc
                0x00000134       0x2a ./MKUART/mkuart.o
                0x00000134                uart_getc
 .text.__vector_13
                0x0000015e       0x42 ./MKUART/mkuart.o
                0x0000015e                __vector_13
 .text.uart_putint
                0x000001a0       0x42 ./MKUART/mkuart.o
                0x000001a0                uart_putint
 .text.lcd_sendHalf
                0x000001e2       0x2a ./lcd44780.o
 .text._lcd_write_byte
                0x0000020c       0x2e ./lcd44780.o
                0x0000020c                _lcd_write_byte
 .text.lcd_write_cmd
                0x0000023a        0x8 ./lcd44780.o
                0x0000023a                lcd_write_cmd
 .text.lcd_write_data
                0x00000242        0x8 ./lcd44780.o
                0x00000242                lcd_write_data
 .text.lcd_char
                0x0000024a       0x12 ./lcd44780.o
                0x0000024a                lcd_char
 .text.lcd_str  0x0000025c       0x18 ./lcd44780.o
                0x0000025c                lcd_str
 .text.lcd_str_P
                0x00000274       0x1c ./lcd44780.o
                0x00000274                lcd_str_P
 .text.lcd_defchar
                0x00000290       0x30 ./lcd44780.o
                0x00000290                lcd_defchar
 .text.lcd_defchar_P
                0x000002c0       0x40 ./lcd44780.o
                0x000002c0                lcd_defchar_P
 .text.lcd_locate
                0x00000300       0x10 ./lcd44780.o
                0x00000300                lcd_locate
 .text.lcd_cls  0x00000310       0x10 ./lcd44780.o
                0x00000310                lcd_cls
 .text.lcd_init
                0x00000320       0x88 ./lcd44780.o
                0x00000320                lcd_init
 .text.lcd_defchar_E
                0x000003a8       0x40 ./lcd44780.o
                0x000003a8                lcd_defchar_E
 .text.lcd_str_E
                0x000003e8       0x24 ./lcd44780.o
                0x000003e8                lcd_str_E
 .text.lcd_hex  0x0000040c       0x38 ./lcd44780.o
                0x0000040c                lcd_hex
 .text.lcd_int  0x00000444       0x38 ./lcd44780.o
                0x00000444                lcd_int
 .text.calibrate_dutycycle
                0x0000047c       0x14 ./main.o
                0x0000047c                calibrate_dutycycle
 .text.set_systik
                0x00000490        0xe ./main.o
                0x00000490                set_systik
 .text.initInterrupt0
                0x0000049e       0x16 ./main.o
                0x0000049e                initInterrupt0
 .text.initInterrupt1
                0x000004b4       0x26 ./main.o
                0x000004b4                initInterrupt1
 .text.initADC  0x000004da        0xc ./main.o
                0x000004da                initADC
 .text.main     0x000004e6       0x3e ./main.o
                0x000004e6                main
 .text.__vector_7
                0x00000524       0xdc ./main.o
                0x00000524                __vector_7
 .text.__vector_16
                0x00000600       0x8c ./main.o
                0x00000600                __vector_16
 .text.libgcc   0x0000068c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x0000068c        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x0000068c       0x42 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x0000068c                itoa
 .text.avr-libc
                0x000006ce       0x68 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
                0x000006ce                ltoa
 .text.avr-libc
                0x00000736       0x10 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
                0x00000736                __eerd_byte_m32
 .text.avr-libc
                0x00000746       0x20 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x00000746                strrev
 .text.libgcc   0x00000766       0x28 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
                0x00000766                __udivmodhi4
 .text.libgcc   0x0000078e       0x44 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
                0x0000078e                __udivmodsi4
                0x000007d2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000007d2        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x000007d2                exit
                0x000007d2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000007d2        0x4 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x000007d6                _etext = .

.data           0x00800060        0x0 load address 0x000007d6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MKUART/mkuart.o
 .data          0x00800060        0x0 ./lcd44780.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060       0x3b
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./MKUART/mkuart.o
 .bss           0x00800060        0x0 ./lcd44780.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(ltoa.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega32.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00800060        0x0 c:/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800060       0x34 ./MKUART/mkuart.o
                0x00800060                UART_TxHead
                0x00800061                UART_TxTail
                0x00800062                UART_TxBuf
                0x00800072                UART_RxHead
                0x00800073                UART_RxTail
                0x00800074                UART_RxBuf
 COMMON         0x00800094        0x7 ./main.o
                0x00800094                dc_0
                0x00800095                dc_14
                0x00800096                dc_16
                0x00800097                STATE
                0x00800098                halfsec_count
                0x00800099                OCRxn_val
                0x0080009b                PROVIDE (__bss_end, .)
                0x000007d6                __data_load_start = LOADADDR (.data)
                0x000007d6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080009b        0x0
                0x0080009b                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080009b                PROVIDE (__noinit_end, .)
                0x0080009b                _end = .
                0x0080009b                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(fastpwm.elf elf32-avr)
LOAD linker stubs
